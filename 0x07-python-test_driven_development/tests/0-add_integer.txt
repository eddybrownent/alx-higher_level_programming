Tests for 0-add_integer.py module

this module has a function called add_integer that calculates the sum of two numbers or floats

Example usage:

Importing the function from the module:

>>> add_integer = __import__('0-add_integer').add_integer
>>> 

Adding two integers both positive:

>>> add_integer(9, 8)
17

Adding two integers both negative:

>>> add_integer(-7, -5)
-12

Adding integers one negative the other positive:

>>> add_integer(-3, 6)
3

Adding float and an integer:

>>> add_integer(2.4, 10)
12

Adding two floats both postive:

>>> add_integer(6.3, 5.1)
11

Adding two floats one positive the other negative:

>>> add_integer(1.2, -3.8)
-2

Adding a number with a string:

>>> add_integer(3.2, '1')
Traceback (most recent call last):
	...
TypeError: b must be a an integer

The second argument by default is 98 so passing 0 only argument:

>>> add_integer(0)
98
>>> 

Passing no arguments:

>>> add_integer()
Traceback (most recent call last):
  	...
TypeError: add_integer() missing 1 required positional argument: 'a'

Adding two strings both strings:

>>> add_integer(1, 2, 3)
Traceback (most recent call last):
	...
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
