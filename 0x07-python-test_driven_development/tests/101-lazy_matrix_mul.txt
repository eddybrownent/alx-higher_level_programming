Test for lazy_matrix_mul module
This module has a function that multiplies two matrices using Numpy

Importing:
>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul
>>>

Multplying matrices with integers:
>>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
[[ 7 10]
 [15 22]]

Multiplying matrice with floats:
>>> print(lazy_matrix_mul([[1.5, 2.2], [6.4, 5.5]], [[5.4, 3.3], [2.4, 1.3]]))
[[13.38  7.81]
 [47.76 28.27]]
>>> 

Matrices not of same size:
>>> print(lazy_matrix_mul([[1, 2],[3, 4],[3, 4]], [[5, 6, 1], [7, 8, 2]]))
[[19 22  5]
 [43 50 11]
 [43 50 11]]
>>> 

Case string * matrix:
>>> print(lazy_matrix_mul("eddy", [[3, 4]]))
Traceback (most recent call last):
	...
numpy.core._exceptions._UFuncNoLoopError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('<U4'), dtype('int64')) -> None
>>> 

Case matrix * string:
>>> print(lazy_matrix_mul([[3, 4]], "eddy"))
Traceback (most recent call last):
	...
numpy.core._exceptions._UFuncNoLoopError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('int64'), dtype('<U4')) -> None


Case list * matrix:
>>> m_a = [1, 2, 3, 4]
>>> m_b = [[5, 6], [7, 8]]
>>> lazy_matrix_mul(m_a, m_b)
Traceback (most recent call last):
	...
ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 2 is different from 4)


case matrix * list:
>>> m_a = [[1, 3], [4, 5]]
>>> m_b = [1, 2, 3, 4]
>>> lazy_matrix_mul(m_a, m_b)
Traceback (most recent call last):
	...
ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 4 is different from 2)


Empty matrix * matrix:
>>> m_a = [[]]
>>> m_b = [[2, 4], [3, 5]]
>>> lazy_matrix_mul(m_a, m_b)
Traceback (most recent call last):
	...
ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 2 is different from 0)
>>> 

Matrix * empty matrix:
>>> m_a = [[1, 2], [3, 4]]
>>> m_b = [[]]
>>> lazy_matrix_mul(m_a, m_b)
Traceback (most recent call last):
	...
ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 2)


Case1 with element string:
>>> m_a = [[1, "3"], [7, 8]]
>>> m_b = [[5, 4], [3, 2]]
>>> lazy_matrix_mul(m_a, m_b)
Traceback (most recent call last):
	...
numpy.core._exceptions._UFuncNoLoopError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('<U21'), dtype('int64')) -> None


case2 with element string:
>>> m_a = [[1, 3], [7, 8]]
>>> m_b = [[5, 4], ['3', 2]]
>>> lazy_matrix_mul(m_a, m_b)
Traceback (most recent call last):
	...
numpy.core._exceptions._UFuncNoLoopError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('int64'), dtype('<U21')) -> None


NUMBER OF ROWS NOT SAME CASE 1:
>>> m_a = [[1, 5,  3], [7, 8]]
>>> m_b = [[5, 4], [3, 2]]
>>> lazy_matrix_mul(m_a, m_b)
Traceback (most recent call last):
	...
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

 
 NUMBER OF ROWS NOT SAME CASE 2:
>>> m_a = [[2, 4], [5, 4]]
>>> m_b = [[1, 2, 3], [4, 5]]
>>> lazy_matrix_mul(m_a, m_b)
Traceback (most recent call last):
	...
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.
>>> 

NOt possible to multiply Case 1:
>>> m_a = [[1, 2, 3], [4, 5, 6]]
>>> m_b = [[3, 2,], [5, 4]]
>>> lazy_matrix_mul(m_a, m_b)
Traceback (most recent call last):
	...
ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 2 is different from 3)
>>> 

Missing one Argument:
>>> m_a = [[1, 2, 3], [4, 5, 6]]
>>> lazy_matrix_mul(m_a)
Traceback (most recent call last):
	...
TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'



Misssing both arguments:
>>> lazy_matrix_mul()
Traceback (most recent call last):
	...
TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
>>> 
